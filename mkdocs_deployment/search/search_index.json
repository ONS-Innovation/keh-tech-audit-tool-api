{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Tech Audit Tool API","text":""},{"location":"#overview","title":"Overview","text":"<p>This API links with the KEH Tech Audit Tool frontend. </p> <p>This repository contains the infrastructure and  code for deploying an API using Terraform on AWS. The project is structured to support multiple environments. </p>"},{"location":"#techstack-overview","title":"TechStack Overview","text":"<p>This project is built using Poetry for dependency management and MkDocs for generating the documentation site.</p> <p>The API Python code is built using Flask Restx.</p>"},{"location":"#infrastructure-overview","title":"Infrastructure Overview","text":"<p>The API infrastructure is built using Terraform. The API Gateway available on AWS is used to handle the authentication and routing of requests to the Lambda function.</p> <p>To deploy the API, the Terraform code is run to create the necessary resources on AWS. The Terraform code is located in the <code>terraform</code> directory. A certain pattern is to be followed when deploying a brand new API.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Check out the README.md file in the root of the repository for more information.</p>"},{"location":"api/","title":"API Documentation","text":"<p>The Tech Audit Tool API provides endpoints for managing project data and authentication. Most endpoints require authentication using AWS Cognito ID tokens.</p>"},{"location":"api/#interactive-api-documentation","title":"Interactive API Documentation","text":"<p>Open API Documentation or interact below:</p>"},{"location":"api/#authentication","title":"Authentication","text":"<p>Most API endpoints require a valid AWS Cognito ID token in the Authorization header:</p> Header Type Description Required <code>Authorization</code> string AWS Cognito ID token Yes"},{"location":"api/#base-url","title":"Base URL","text":"<p>All endpoints are prefixed with <code>/api/v1/</code> as the namespace.</p>"},{"location":"api/#available-endpoints","title":"Available Endpoints","text":"<ul> <li>Authentication<ul> <li>Verify tokens</li> <li>Refresh tokens</li> </ul> </li> <li>Projects<ul> <li>Get all projects</li> <li>Create new project</li> </ul> </li> <li>Project<ul> <li>Get project details</li> <li>Update project</li> </ul> </li> <li>User<ul> <li>Get user information</li> </ul> </li> <li>Filters<ul> <li>Filter projects by criteria</li> </ul> </li> </ul>"},{"location":"deployment/","title":"Deployment Guide","text":"<p>This project has no CI/CD pipeline. The API is deployed manually.</p> <p>Make sure to create an ECR repository before terraforming the API.</p> <p>You can find more information on creating an ECR repository here.</p> <p>Note down the ECR repository URI as you will need it for the Terraform code and pushing the Docker image.</p> <p>Your URI should be in the format: <code>&lt;aws_account_id&gt;.dkr.ecr.&lt;aws_region&gt;.amazonaws.com/&lt;repository_name&gt;</code>.</p> <p>For example: <code>999999999999.dkr.ecr.eu-west-2.amazonaws.com/tech-audit-tool-api</code>.</p>"},{"location":"deployment/#containerising-the-api","title":"Containerising the API","text":"<p>Change directory into the <code>aws_lambda_script</code> directory:</p> <pre><code>cd aws_lambda_script\n</code></pre> <p>Make sure to version your container images, using this format: <code>v&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</code>.</p> <p>More information about Versioning Semantics can be found here.</p> <p>Build the Docker image with ECR repository URI as the name. </p> <pre><code>docker build -t &lt;ecr_uri&gt;:&lt;version_tag&gt; .\n</code></pre> <p>Push the Docker image to the ECR repository:</p> <pre><code>docker push &lt;ecr_uri&gt;:&lt;version_tag&gt;\n</code></pre> <p>You can now find that image with that version tag in the ECR repository.</p> <p>Edit this URL with your ECR repository URI and region details to visit the repository (make sure you're logged in):</p> <pre><code>https://&lt;region&gt;.console.aws.amazon.com/ecr/repositories/private/&lt;aws_account_id&gt;/&lt;repository_name&gt;\n</code></pre>"},{"location":"infrastructure/","title":"Infrastructure","text":""},{"location":"infrastructure/#aws-resources","title":"AWS Resources","text":"<p>Before terraforming the API, you must have the API Python code containerised, using Docker, and have an elastic container registry (ECR) available.</p> <p>Please refer to the deployment guide for more information.</p> <p>There are 5 AWS resources that are created by the terraform script:</p> <ul> <li>Secrets Manager (Secrets)</li> <li>S3 Bucket (Storage)</li> <li>Cognito User Pool (Authentication)</li> <li>Lambda Function (Lambda)</li> <li>API Gateway (api_gateway)</li> </ul> <p>Go through the list and deploy each resource one by one.</p> <p>For each resource, you will need to set the <code>domain</code> and <code>service_subdomain</code> variables in the <code>tfvars</code> file.</p>"},{"location":"infrastructure/#1-ecr-repository","title":"1. ECR Repository","text":"<p>Make sure you have an ECR repository created in the AWS account. This will be used in the <code>S3 bucket</code> and <code>Lambda function</code>.</p>"},{"location":"infrastructure/#2-secrets-manager","title":"2. Secrets Manager","text":"<p>Run like normal. Leave the <code>cognito_pool_id</code>, <code>cognito_client_id</code>, <code>cognito_client_secret</code>, and <code>redirect_uri</code> variables blank. </p>"},{"location":"infrastructure/#3-s3-bucket","title":"3. S3 Bucket","text":"<p>Set the <code>ecr_repository_name</code> variable in the <code>tfvars</code> file. Then run the terraform script.</p>"},{"location":"infrastructure/#4-cognito-user-pool","title":"4. Cognito User Pool","text":"<p>Run like normal.</p>"},{"location":"infrastructure/#5-lambda-function","title":"5. Lambda Function","text":"<p>The tech audit S3 bucket and the secrets manager secret are created by the terraform script. The aws cognito token url is set by the terraform script. Then run the terraform script for the lambda function and this data is set in the lambda function.</p>"},{"location":"infrastructure/#6-api-gateway","title":"6. API Gateway","text":"<p>Run like normal. Note down the URLs in the outputs.</p>"},{"location":"infrastructure/#7-secrets-manager-re-application","title":"7. Secrets Manager Re-application","text":"<p>Go back to the <code>Secrets Manager</code> resource and set the <code>cognito_pool_id</code>, <code>cognito_client_id</code>, <code>cognito_client_secret</code>, and <code>redirect_uri</code> variables.</p>"},{"location":"infrastructure/#8-finished","title":"8. Finished","text":""},{"location":"infrastructure/#terraform-configuration","title":"Terraform Configuration","text":"<p>Flow chart explanation of the Terraform setup and infrastructure components.</p> <p></p>"},{"location":"endpoints/auth/","title":"Authentication","text":"<p>The API uses AWS Cognito for authentication. All API endpoints require a valid ID token in the Authorization header.</p>"},{"location":"endpoints/auth/#verify-token","title":"Verify Token","text":"<p><code>GET /api/v1/verify</code></p> <p>Exchange authorization code for tokens.</p>"},{"location":"endpoints/auth/#query-parameters","title":"Query Parameters","text":"Parameter Type Description Required <code>code</code> <code>string</code> Authorization code from Cognito callback Yes"},{"location":"endpoints/auth/#responses","title":"Responses","text":"Status Code Description <code>200</code> Success. Response body contains the new ID token: <code>{\"id_token\": \"&lt;id_token&gt;\", \"refresh_token\": \"&lt;refresh_token&gt;\"}</code>. <code>400</code> Bad Request <code>401</code> Authorization is required"},{"location":"endpoints/filter/","title":"Filter API","text":""},{"location":"endpoints/filter/#filter-projects","title":"Filter Projects","text":"<p><code>GET /api/v1/projects/filter</code></p> <p>Filter projects based on multiple criteria.</p>"},{"location":"endpoints/filter/#authorization","title":"Authorization","text":"<p>Requires a valid Cognito ID token in the Authorization header.</p> Header Type Description Required <code>Authorization</code> string AWS Cognito ID token Yes"},{"location":"endpoints/filter/#query-parameters","title":"Query Parameters","text":"Parameter Type Description Required <code>email</code> string User email to filter by (comma-separated) False <code>roles</code> string Roles to filter by (comma-separated) False <code>name</code> string Project name to filter by (comma-separated) False <code>developed</code> string Filter by development type (\"In house\", \"Partnership\", \"Outsourced\") False <code>languages</code> string Programming languages to filter by (comma-separated) False <code>source_control</code> string Source control systems to filter by (comma-separated) False <code>hosting</code> string Hosting platforms to filter by (comma-separated) False <code>database</code> string Database types to filter by (comma-separated) False <code>frameworks</code> string Frameworks to filter by (comma-separated) False <code>cicd</code> string CI/CD tools to filter by (comma-separated) False <code>infrastructure</code> string Infrastructure tools to filter by (comma-separated) False <code>return</code> string Sections to return in response (user, details, developed, source_control, architecture) False"},{"location":"endpoints/filter/#responses","title":"Responses","text":"Status Code Description <code>200</code> Returns filtered list of projects matching the specified criteria. If the <code>return</code> parameter is specified, only the requested sections will be included in the response. <code>401</code> Authorization is required <code>404</code> Project not found"},{"location":"endpoints/project/","title":"Projects API","text":""},{"location":"endpoints/project/#get-a-project","title":"Get a Project","text":"<p><code>GET /api/v1/projects/{project_name}</code></p> <p>Returns the project associated with the authenticated user.</p>"},{"location":"endpoints/project/#authorization","title":"Authorization","text":"<p>Requires a valid Cognito ID token in the Authorization header.</p> Header Type Description Required <code>Authorization</code> string AWS Cognito ID token Yes"},{"location":"endpoints/project/#path-variables","title":"Path Variables","text":"Path Variable Type Description Required <code>project_name</code> string The name of the project to get Yes"},{"location":"endpoints/project/#responses","title":"Responses","text":"Status Code Description <code>200</code> Returns a project object. <code>401</code> Authorization is required <code>404</code> Project not found"},{"location":"endpoints/project/#update-a-project","title":"Update a Project","text":"<p><code>PUT /api/v1/projects/{project_name}</code></p> <p>Updates a project.</p>"},{"location":"endpoints/project/#authorization_1","title":"Authorization","text":"<p>Requires a valid Cognito ID token in the Authorization header.</p> Header Type Description Required <code>Authorization</code> string AWS Cognito ID token Yes"},{"location":"endpoints/project/#path-variables_1","title":"Path Variables","text":"Path Variable Type Description Required <code>project_name</code> string The name of the project to update Yes"},{"location":"endpoints/project/#request-body","title":"Request Body","text":"<pre><code>{\n  \"user\": [\n    {\n      \"email\": \"string\",\n      \"roles\": [\n        \"string\"\n      ],\n      \"grade\": \"string\"\n    }\n  ],\n  \"details\": [\n    {\n      \"name\": \"string\",\n      \"short_name\": \"string\",\n      \"documentation_link\": [\n        \"string\"\n      ],\n      \"project_description\": \"string\"\n    }\n  ],\n  \"developed\": [\n    \"string\"\n  ],\n  \"source_control\": [\n    {\n      \"type\": \"string\",\n      \"links\": [\n        {\n          \"description\": \"string\",\n          \"url\": \"string\"\n        }\n      ]\n    }\n  ],\n  \"architecture\": {\n    \"hosting\": {\n      \"type\": [\n        \"string\"\n      ],\n      \"details\": [\n        \"string\"\n      ]\n    },\n    \"database\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    },\n    \"languages\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    },\n    \"frameworks\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    },\n    \"cicd\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    },\n    \"infrastructure\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    }\n  },\n  \"stage\": \"string\"\n}\n</code></pre>"},{"location":"endpoints/project/#responses_1","title":"Responses","text":"Status Code Description <code>200</code> Returns the same project object as the request body. <code>401</code> Authorization is required <code>404</code> Project not found <code>406</code> Missing JSON data"},{"location":"endpoints/projects/","title":"Projects API","text":""},{"location":"endpoints/projects/#get-projects","title":"Get Projects","text":"<p><code>GET /api/v1/projects</code></p> <p>Returns all projects associated with the authenticated user.</p>"},{"location":"endpoints/projects/#authorization","title":"Authorization","text":"<p>Requires a valid Cognito ID token in the Authorization header.</p> Header Type Description Required <code>Authorization</code> string AWS Cognito ID token Yes"},{"location":"endpoints/projects/#responses","title":"Responses","text":"Status Code Description <code>200</code> Returns a list of project objects. <code>401</code> Authorization is required <code>404</code> Projects not found"},{"location":"endpoints/projects/#create-a-project","title":"Create a Project","text":"<p><code>POST /api/v1/projects</code></p> <p>Creates a new project.</p>"},{"location":"endpoints/projects/#authorization_1","title":"Authorization","text":"<p>Requires a valid Cognito ID token in the Authorization header.</p> Header Type Description Required <code>Authorization</code> string AWS Cognito ID token Yes"},{"location":"endpoints/projects/#request-body","title":"Request Body","text":"<pre><code>{\n  \"user\": [\n    {\n      \"email\": \"string\",\n      \"roles\": [\n        \"string\"\n      ],\n      \"grade\": \"string\"\n    }\n  ],\n  \"details\": [\n    {\n      \"name\": \"string\",\n      \"short_name\": \"string\",\n      \"documentation_link\": [\n        \"string\"\n      ],\n      \"project_description\": \"string\"\n    }\n  ],\n  \"developed\": [\n    \"string\"\n  ],\n  \"source_control\": [\n    {\n      \"type\": \"string\",\n      \"links\": [\n        {\n          \"description\": \"string\",\n          \"url\": \"string\"\n        }\n      ]\n    }\n  ],\n  \"architecture\": {\n    \"hosting\": {\n      \"type\": [\n        \"string\"\n      ],\n      \"details\": [\n        \"string\"\n      ]\n    },\n    \"database\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    },\n    \"languages\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    },\n    \"frameworks\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    },\n    \"cicd\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    },\n    \"infrastructure\": {\n      \"main\": [\n        \"string\"\n      ],\n      \"others\": [\n        \"string\"\n      ]\n    }\n  },\n  \"stage\": \"string\"\n}\n</code></pre>"},{"location":"endpoints/projects/#responses_1","title":"Responses","text":"Status Code Description <code>201</code> Created project. Returns the same project object as the request body. <code>401</code> Authorization is required <code>406</code> Missing JSON data <code>409</code> Project with the same name and owner already exists"},{"location":"endpoints/refresh/","title":"Authentication","text":"<p>The API uses AWS Cognito for authentication. All API endpoints require a valid ID token in the Authorization header.</p>"},{"location":"endpoints/refresh/#refresh-token","title":"Refresh Token","text":"<p><code>GET /api/v1/refresh</code></p> <p>Exchange authorization code for tokens.</p>"},{"location":"endpoints/refresh/#query-parameters","title":"Query Parameters","text":"Parameter Description <code>refresh_token</code> Refresh token from Cognito callback"},{"location":"endpoints/refresh/#response","title":"Response","text":"Status Code Description <code>200</code> Success. Response body contains the new ID token: <code>{\"id_token\": \"string\"}</code>. <code>400</code> Bad Request"},{"location":"endpoints/user/","title":"User API","text":""},{"location":"endpoints/user/#get-user-information","title":"Get User Information","text":"<p><code>GET /api/v1/user</code></p> <p>Returns the email address of the authenticated user.</p>"},{"location":"endpoints/user/#authorization","title":"Authorization","text":"<p>Requires a valid Cognito ID token in the Authorization header.</p> Header Type Description Required <code>Authorization</code> string AWS Cognito ID token Yes"},{"location":"endpoints/user/#responses","title":"Responses","text":"Status Code Description <code>200</code> Success. Returns the user's email address. <code>{ \"email\": \"string\" }</code> <code>401</code> Authorization is required <code>404</code> User not found"}]}